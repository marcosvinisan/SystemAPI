/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.mycompany.data;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * Classe que realiza a conexão com o banco.
 * 
 * @author alunolages
 */
public class ConexaoDB {
    private String url, porta, banco, usuario, senha, nomeBanco;
    
    /**
     * Construtor da classe [ConexaoDB].
     */
    public ConexaoDB(){
        this.usuario = "root";
        this.senha = "";
        this.nomeBanco = "sistemabanco";
        this.porta = "3306";
        this.banco = "mysql";
    }
    
    /**
     * Realiza a conexão com o banco.
     * @return [Connection] ou [null] caso a conexão não tenha sido realizada.
     */
    public Connection getConexao() {
        Connection conexao = null;
        
        try {
            this.url = "jdbc:"+this.banco+"://localhost:"+this.porta+"/"+this.nomeBanco;
            conexao  = DriverManager.getConnection(url, this.usuario, this.senha);
        }
        catch (SQLException e) {
            System.out.println("Problemas na conexão com o banco: " + e.getMessage());
        }
        
        
        return conexao;
    }
    
    /**
     * Abre uma conexão com o DB e prepara uma consulta.
     * 
     * @param sqlQuery
     * @return [PreparedStatement] -> consulta preparada.
     * @throws SQLException 
     */
    public PreparedStatement prepararQuery(String sqlQuery) throws SQLException{
        Connection conexao = this.getConexao();
        
        return conexao.prepareStatement(sqlQuery);
    }
    
    /**
     * Abre uma conexão com o DB e prepara uma consulta que retorna a quantidade
     * de linhas afetadas no banco.
     * 
     * @param sqlQuery
     * @param autoGeneratedKeys
     * @return [PreparedStatement] -> consulta preparada.
     * @throws SQLException 
     */
    public PreparedStatement prepararQuery(String sqlQuery, int autoGeneratedKeys) throws SQLException{
        Connection conexao = this.getConexao();
        
        return conexao.prepareStatement(sqlQuery, autoGeneratedKeys);
    }
}
